information:
  name: nvcode
  background: dark
  author: "Christian Chiarulli <chrisatmachine@gmail.com>"

palette:
  fg: "#ABB2BF"
  bg: "#1E1E1E"

  red: "#D16969"
  error_red: "#F44747"
  green: "#608B4E"
  light_green: "#B5CEA8"
  yellow: "#DCDCAA"
  dark_yellow: "#D7BA7D"
  orange: "#CE9178"
  blue: "#569CD6"
  light_blue: "#9CDCFE"
  vivid_blue: "#4FC1FF"
  purple: "#C586C0"
  cyan: "#4EC9B0"
  white: "#ABB2BF"
  black: "#1E1E1E"
  line_grey: "#5C6370"
  gutter_fg_grey: "#4B5263"
  cursor_grey: "#2C323C"
  visual_grey: "#3E4452"
  menu_grey: "#282C34"
  special_grey: "#3B4048"
  vertsplit: "#181A1F"

highlights:
  Normal: "fg bg"

  Comment: "green - i"
  Constant: "yellow"
  String: "orange - i"
  Character: "orange"
  Number: "light_green"
  Boolean: "blue - b"
  Float: "light_green"
  Identifier: "blue"
  Function: "blue - b"
  Statement: "purple"
  Conditional: "purple"
  Repeat: "purple"
  Label: "purple"
  Operator: "purple"
  Keyword: "blue"
  Exception: "purple"
  PreProc: "yellow"
  Include: "blue"
  Define: "purple"
  Title: "blue"
  Macro: "purple"
  PreCondit: "light_blue"
  Type: "light_blue"
  StorageClass: "light_blue"
  Structure: "yellow"
  Typedef: "yellow"
  Special: "blue - i"
  SpecialComment: "line_grey"
  Error: "error_red - br"
  Todo: "purple - bi"
  Underlined: "cyan . u"
  Cursor: "- - r"

  ColorColumn: "- cursor_grey"
  CursorLineNr: "white - b"
  SignColumn: "- bg"
  Conceal: ""
  CursorColumn: "- cursor_grey"
  CursorLine: "- cursor_grey"
  Directory: "blue"
  DiffAdd: "black green"
  DiffChange: "yellow - u"
  DiffDelete: "black red"
  DiffText: "black yellow"
  ErrorMsg: "error_red"
  VertSplit: "vertsplit"
  Folded: "line_grey"
  IncSearch: "yellow line_grey"
  LineNr: "gutter_fg_grey"
  MatchParen: "blue - u"
  NonText: "special_grey"
  Pmenu: "white menu_grey"
  PmenuSel: "black blue"
  PmenuSbar: "- special_grey"
  PmenuThumb: "- white"
  Question: "purple"
  QuickFixLine: "black yellow"
  Search: "black yellow"
  SpecialKey: "special_grey"
  SpellBad: "error_red - u"
  SpellCap: "dark_yellow"
  SpellLocal: "dark_yellow"
  SpellRare: "dark_yellow"
  StatusLine: "white cursor_grey"
  StatusLineNC: "line_grey"
  StatusLineTerm: "white cursor_grey"
  StatusLineTermNC: "cursor_grey"
  TabLine: "line_grey"
  TabLineSel: "white"
  TabLineFill: "- bg"
  Terminal: "white black"
  Visual: "- visual_grey"
  VisualNOS: "visual_grey"
  WarningMsg: "yellow"
  WildMenu: "black blue"
  EndOfBuffer: "black"
  # -- Start Treesitter --
  # # Misc
  TSError: "error_red"
  TSPunctDelimiter: "white"
  TSPunctBracket: "white"
  TSPunctSpecial: "white"
  # Constants
  TSConstant: "yellow"
  TSConstBuiltin: "blue"
  # Not sure about this guy
  TSConstMacro: "cyan"
  TSStringRegex: "orange"
  TSString: "orange"
  TSStringEscape: "dark_yellow"
  TSCharacter: "orange"
  TSNumber: "light_green"
  TSBoolean: "blue"
  TSFloat: "light_green"
  TSAnnotation: "yellow"
  TSAttribute: "cyan"
  TSNamespace: "#FF00FF"
  # Functions
  TSFuncBuiltin: "yellow"
  TSFunction: "yellow"
  TSFuncMacro: "yellow"
  TSParameter: "light_blue"
  TSParameterReference: "light_blue"
  TSMethod: "yellow"
  TSField: "light_blue"
  TSProperty: "light_blue"
  TSConstructor: "cyan"
  # Keywords
  TSConditional: "purple"
  TSRepeat: "purple"
  TSLabel: "light_blue"
  # Does not work for yield and return they should be diff then class and def
  TSKeyword: "blue"
  TSKeywordFunction: "#FF00FF"
  TSKeywordOperator: "blue"
  TSOperator: "white"
  TSException: "purple"
  TSType: "cyan"
  TSTypeBuiltin: "blue"
  TSStructure: "#FF00FF"
  TSInclude: "purple"
  # Variable
  TSVariable: "light_blue"
  TSVariableBuiltin: "light_blue"
  # Text
  TSText: "#FFFF00"
  TSStrong: "#FFFF00"
  TSEmphasis: "#FFFF00"
  TSUnderline: "#FFFF00"
  TSTitle: "#FFFF00"
  TSLiteral: "#FFFF00"
  TSURI: "#FFFF00"
  # Tags
  TSTag: "blue"
  TSTagDelimiter: "line_grey"
  # -- END Treesitter --
  # -- Start Languages --
  # HTML (keep consistent with Markdown, below)
  htmlArg: "dark_yellow"
  htmlBold: "dark_yellow - b"
  htmlEndTag: "white"
  htmlH1: "blue"
  htmlH2: "blue"
  htmlH3: "blue"
  htmlH4: "blue"
  htmlH5: "blue"
  htmlH6: "blue"
  htmlItalic: "purple - i"
  htmlLink: "cyan - u"
  htmlSpecialChar: "dark_yellow"
  htmlSpecialTagName: "blue"
  htmlTag: "white"
  htmlTagN: "blue"
  htmlTagName: "blue"
  htmlTitle: "white"

  # Markdown (keep consistent with HTML, above)
  # call s:h("markdownBlockquote", { "fg": s:comment_grey })
  # call s:h("markdownBold", { "fg": s:dark_yellow, "gui": "bold", "cterm": "bold" })
  # call s:h("markdownCode", { "fg": s:green })
  # call s:h("markdownCodeBlock", { "fg": s:green })
  # call s:h("markdownCodeDelimiter", { "fg": s:green })
  # call s:h("markdownH1", { "fg": s:blue })
  # call s:h("markdownH2", { "fg": s:blue })
  # call s:h("markdownH3", { "fg": s:blue })
  # call s:h("markdownH4", { "fg": s:blue })
  # call s:h("markdownH5", { "fg": s:blue })
  # call s:h("markdownH6", { "fg": s:blue })
  # call s:h("markdownHeadingDelimiter", { "fg": s:red })
  # call s:h("markdownHeadingRule", { "fg": s:comment_grey })
  # call s:h("markdownId", { "fg": s:purple })
  # call s:h("markdownIdDeclaration", { "fg": s:blue })
  # call s:h("markdownIdDelimiter", { "fg": s:purple })
  # call s:h("markdownItalic", { "fg": s:purple, "gui": "italic", "cterm": "italic" })
  # call s:h("markdownLinkDelimiter", { "fg": s:purple })
  # call s:h("markdownLinkText", { "fg": s:blue })
  # call s:h("markdownListMarker", { "fg": s:red })
  # call s:h("markdownOrderedListMarker", { "fg": s:red })
  # call s:h("markdownRule", { "fg": s:comment_grey })
  # call s:h("markdownUrl", { "fg": s:cyan, "gui": "underline", "cterm": "underline" })
  # old stuff
  # diffAdded: "green"
  # diffRemoved: "red"
  # diffFileId: "blue - br"
  # diffFile: "gray"
  # diffNewFile: "green"
  # diffOldFile: "red"
  # rubyArrayDelimiter: "azure"
  # rubyCurlyBlockDelimiter: "azure"
  # SignColumn: ". darkgray ."
  # GitGutterAdd: "green darkgray"
  # GitGutterDelete: "red darkgray"
  # GitGutterChange: "blue darkgray"
  # ToolbarLine: ". darkgray"
  # ToolbarButton: "suvagray - r"
  # debugPc: "- bg_cyan"
  # debugBreakpoint: "red - r"
  # CoC
  CocExplorerIndentLine: "line_grey"
  CocExplorerBufferRoot: "cyan"
# terminal: "bg red green yellow blue magenta cyan silver gray red green yellow blue magenta cyan fg"

# Debug
# Ignore
# Tag
# Delimiter
# SpecialChar
# Cursor", { "fg": s:black, "bg": s:blue }) " the character under the cursor
# CursorIM", {}) " like Cursor, but used when in IME mode
# FoldColumn", {}) " 'foldcolumn'
# SignColumn", {}) " column where signs are displayed
# Conceal
# CursorLineNr", {}) " Like LineNr when 'cursorline' or 'relativenumber' is set for the cursor line.
# MoreMsg", {}) " more-prompt
# ModeMsg", {}) " 'showmode' message (e.g., "-- INSERT --")
# TabLineFill", {}) " tab pages line, where there are no labels

# SpecialKey: "orange"

# ErrorMsg: "red - br"
# WarningMsg: "orange - br"
# ModeMsg: "yellow - br"
# MoreMsg: "green - br"
# Question: "cyan - br"
# Directory: "blue - b"

# DiffAdd: "- bg_green"
# DiffDelete: "bg_red bg_red"
# DiffChange: "- bg_blue"
# DiffText: "- bg_cyan"
# Folded: "blue darkgray i"
# FoldColumn: "blue bg"
# Pmenu: "fg darkgray"
# PmenuSel: "blue darkgray br"
# PmenuSbar: "- darkgray"
# PmenuThumb: "- yellow"
# WildMenu: "blue darkgray br"
# LineNr: "orange"
# CursorLine: "- darkgray"
# CursorColumn: "- darkgray"
# CursorLineNr: "yellow - b"

# SpellBad: ". . . red"
# SpellCap: ". . . azure"
# SpellRare: ". . . magenta"
# SpellLocal: ". . . cyan"
# TabLineFill: ""
# TabLine: "gray darkgray"
# TabLineSel: "blue darkgray"
# StatusLine: "darkgray fg r"
# StatusLineNC: "darkgray gray r"
# StatusLineTerm: "darkgray green r"
# StatusLineTermNC: "darkgray gray r"
# VertSplit: "darkgray fg r"
# ColorColumn: "- darkgray"
# QuickFixLine: "- bg_cyan"
